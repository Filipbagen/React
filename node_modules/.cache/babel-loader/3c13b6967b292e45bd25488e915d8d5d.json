{"ast":null,"code":"var _jsxFileName = \"/Users/filip/coding/React/src/CountryInfo.js\";\nimport styled from 'styled-components';\nimport Tilt from 'react-tilt';\nimport { BrowserRouter as Link } from 'react-router-dom'; // Style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Country = styled.div`\n    background-color: #fff;\n    width: 25vw;\n    margin: 6pt;\n    padding: 1pt 8pt;\n    border-radius: 5pt;\n    box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.2);\n    border-radius: 7pt;\n    transition: .2s;\n\n    &:hover {\n        box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.2);\n    }\n`;\n_c = Country;\nconst Bar = styled.div`\n    width: ${props => props.width};\n    height: 10pt;\n    background-color: #3F66A6;\n    margin-bottom: 10pt;\n    border-radius: 3pt;\n`;\n_c2 = Bar;\nconst InfoStyle = styled.p`\n    padding: 0;\n`;\n_c3 = InfoStyle;\n\nconst CountryInfo = ({\n  country,\n  detailed,\n  largest\n}) => {\n  // Constants\n  const ratio = country.area / largest * 100;\n  const detailedPath = '/country/' + country.data.cca3;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: detailedPath,\n    children: /*#__PURE__*/_jsxDEV(Tilt, {\n      options: {\n        scale: 1.02,\n        reverse: true,\n        max: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        children: [/*#__PURE__*/_jsxDEV(InfoStyle, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [country.flag, \" \", country.name.common]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 23\n          }, this), \" \\u2022 \", Math.round(country.area / 100000) / 10, \" million km\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 120\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          width: ratio + '%'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), detailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InfoStyle, {\n            children: [\"Capital: \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoStyle, {\n            children: [\"Region: \", country.subregion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = CountryInfo;\nexport default CountryInfo;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"Bar\");\n$RefreshReg$(_c3, \"InfoStyle\");\n$RefreshReg$(_c4, \"CountryInfo\");","map":{"version":3,"sources":["/Users/filip/coding/React/src/CountryInfo.js"],"names":["styled","Tilt","BrowserRouter","Link","Country","div","Bar","props","width","InfoStyle","p","CountryInfo","country","detailed","largest","ratio","area","detailedPath","data","cca3","scale","reverse","max","flag","name","common","Math","round","capital","subregion"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,aAAa,IAAIC,IAA1B,QAAsC,kBAAtC,C,CAEA;;;AACA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;KAAMD,O;AAeN,MAAME,GAAG,GAAGN,MAAM,CAACK,GAAI;AACvB,aAAaE,KAAK,IAAIA,KAAK,CAACC,KAAM;AAClC;AACA;AACA;AACA;AACA,CANA;MAAMF,G;AAQN,MAAMG,SAAS,GAAGT,MAAM,CAACU,CAAE;AAC3B;AACA,CAFA;MAAMD,S;;AAIN,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAoC;AACtD;AACA,QAAMC,KAAK,GAAGH,OAAO,CAACI,IAAR,GAAeF,OAAf,GAAyB,GAAvC;AACA,QAAMG,YAAY,GAAG,cAAcL,OAAO,CAACM,IAAR,CAAaC,IAAhD;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAEF,YAAV;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE;AAAEG,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE,IAAxB;AAA8BC,QAAAA,GAAG,EAAE;AAAnC,OAAf;AAAA,6BACE,QAAC,OAAD;AAAA,gCAEE,QAAC,SAAD;AAAA,uCAAY;AAAA,uBAAIV,OAAO,CAACW,IAAZ,OAAmBX,OAAO,CAACY,IAAR,CAAaC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ,cAA2DC,IAAI,CAACC,KAAL,CAAWf,OAAO,CAACI,IAAR,GAAe,MAA1B,IAAoC,EAA/F,8BAA6G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAED,KAAK,GAAG;AAApB;AAAA;AAAA;AAAA;AAAA,gBAHF,EAMGF,QAAQ,iBACP;AAAA,kCACE,QAAC,SAAD;AAAA,oCAAqBD,OAAO,CAACgB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA,mCAAoBhB,OAAO,CAACiB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAxBD;;MAAMlB,W;AA0BN,eAAeA,WAAf","sourcesContent":["import styled from 'styled-components'\nimport Tilt from 'react-tilt'\nimport { BrowserRouter as Link } from 'react-router-dom'\n\n// Style\nconst Country = styled.div`\n    background-color: #fff;\n    width: 25vw;\n    margin: 6pt;\n    padding: 1pt 8pt;\n    border-radius: 5pt;\n    box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.2);\n    border-radius: 7pt;\n    transition: .2s;\n\n    &:hover {\n        box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.2);\n    }\n`\n\nconst Bar = styled.div`\n    width: ${props => props.width};\n    height: 10pt;\n    background-color: #3F66A6;\n    margin-bottom: 10pt;\n    border-radius: 3pt;\n`\n\nconst InfoStyle = styled.p`\n    padding: 0;\n`\n\nconst CountryInfo = ({ country, detailed, largest }) => {\n  // Constants\n  const ratio = country.area / largest * 100\n  const detailedPath = '/country/' + country.data.cca3\n\n  return (\n    <Link to={detailedPath}>\n      <Tilt options={{ scale: 1.02, reverse: true, max: 20 }}>\n        <Country>\n\n          <InfoStyle> <b>{country.flag} {country.name.common}</b> â€¢ {Math.round(country.area / 100000) / 10} million km<sup>2</sup></InfoStyle>\n          <Bar width={ratio + '%'} />\n\n          {/* Conditional Rendering */}\n          {detailed &&\n            <div>\n              <InfoStyle>Capital: {country.capital}</InfoStyle>\n              <InfoStyle>Region: {country.subregion}</InfoStyle>\n            </div>}\n\n        </Country>\n      </Tilt>\n    </Link>\n  )\n}\n\nexport default CountryInfo\n"]},"metadata":{},"sourceType":"module"}