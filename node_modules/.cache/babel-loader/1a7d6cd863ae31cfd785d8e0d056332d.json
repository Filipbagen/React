{"ast":null,"code":"var _jsxFileName = \"/Users/filip/coding/lab1/src/CountryInfo.js\";\nimport styled from 'styled-components'; // Style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countryStyle = {\n  backgroundColor: 'darkslategrey',\n  color: 'white',\n  margin: '20pt',\n  padding: '4pt',\n  borderRadius: '5pt',\n  width: '50vw'\n};\nconst Container = styled.div`\n    background: darkslategrey;\n    color: white;\n    margin: 20pt;\n    padding: 4pt;\n    borderRadius: 5pt;\n    width: 50vw;\n    box-shadow: 0px 0px 40px 15px rgba(0,0,0,0.3);\n`; // width: ${props => props.dinmamma}%;\n\n_c = Container;\n\nconst CountryInfo = ({\n  country,\n  detailed,\n  largest\n}) => {\n  // Constants magic varible\n  const ratio = country.area / largest * 100;\n  const areaBar = {\n    height: '10pt',\n    backgroundColor: '#fff',\n    marginBottom: '6pt',\n    width: ratio + '%'\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [country.flag, \" \", country.name.common]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), \" \\u2022 \", Math.round(country.area / 100000) / 10, \" million km\", /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 108\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"areaBar\",\n      style: areaBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), detailed && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", country.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Region: \", country.subregion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CountryInfo;\nexport default CountryInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CountryInfo\");","map":{"version":3,"sources":["/Users/filip/coding/lab1/src/CountryInfo.js"],"names":["styled","countryStyle","backgroundColor","color","margin","padding","borderRadius","width","Container","div","CountryInfo","country","detailed","largest","ratio","area","areaBar","height","marginBottom","flag","name","common","Math","round","capital","subregion"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,eADE;AAEnBC,EAAAA,KAAK,EAAE,OAFY;AAGnBC,EAAAA,MAAM,EAAE,MAHW;AAInBC,EAAAA,OAAO,EAAE,KAJU;AAKnBC,EAAAA,YAAY,EAAE,KALK;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;AASA,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CAUA;;KAVMD,S;;AAYN,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAoC;AACtD;AACA,QAAMC,KAAK,GAAGH,OAAO,CAACI,IAAR,GAAeF,OAAf,GAAyB,GAAvC;AAEA,QAAMG,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdf,IAAAA,eAAe,EAAE,MAFH;AAGdgB,IAAAA,YAAY,EAAE,KAHA;AAIdX,IAAAA,KAAK,EAAEO,KAAK,GAAG;AAJD,GAAhB;AAOA,sBACE,QAAC,SAAD;AAAA,4BAEE;AAAA,mCAAI;AAAA,mBAAIH,OAAO,CAACQ,IAAZ,OAAmBR,OAAO,CAACS,IAAR,CAAaC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,cAAmDC,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACI,IAAR,GAAe,MAA1B,IAAoC,EAAvF,8BAAqG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAArG;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHF,EAMGJ,QAAQ,iBACP;AAAA,8BACE;AAAA,gCAAaD,OAAO,CAACa,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BAAYb,OAAO,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1BD;;MAAMf,W;AA4BN,eAAeA,WAAf","sourcesContent":["import styled from 'styled-components'\n\n// Style\nconst countryStyle = {\n  backgroundColor: 'darkslategrey',\n  color: 'white',\n  margin: '20pt',\n  padding: '4pt',\n  borderRadius: '5pt',\n  width: '50vw'\n}\n\nconst Container = styled.div`\n    background: darkslategrey;\n    color: white;\n    margin: 20pt;\n    padding: 4pt;\n    borderRadius: 5pt;\n    width: 50vw;\n    box-shadow: 0px 0px 40px 15px rgba(0,0,0,0.3);\n`\n\n// width: ${props => props.dinmamma}%;\n\nconst CountryInfo = ({ country, detailed, largest }) => {\n  // Constants magic varible\n  const ratio = country.area / largest * 100\n\n  const areaBar = {\n    height: '10pt',\n    backgroundColor: '#fff',\n    marginBottom: '6pt',\n    width: ratio + '%'\n  }\n\n  return (\n    <Container>\n\n      <p> <b>{country.flag} {country.name.common}</b> â€¢ {Math.round(country.area / 100000) / 10} million km<sup>2</sup></p>\n      <div className='areaBar' style={areaBar} />\n\n      {/* Conditional Rendering */}\n      {detailed &&\n        <div>\n          <p>Capital: {country.capital}</p>\n          <p>Region: {country.subregion}</p>\n        </div>}\n\n    </Container>\n  )\n}\n\nexport default CountryInfo\n"]},"metadata":{},"sourceType":"module"}