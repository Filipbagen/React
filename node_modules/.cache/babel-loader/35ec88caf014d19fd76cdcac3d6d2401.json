{"ast":null,"code":"var _jsxFileName = \"/Users/filip/coding/React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport countries from 'world-countries';\nimport CountryInfo from './CountryInfo';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'; // Style\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  position: absolute;\n  top: 80pt;\n  \n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n_c = Container;\n\nconst App = props => {\n  _s();\n\n  const sortedCountries = countries.sort((a, b) => b.area - a.area).slice(0, 15);\n  const finalCountries = sortedCountries.filter(country => country.name.common !== 'Antarctica');\n  const [searchString, setSearchString] = useState('');\n\n  const TextInput = event => {\n    setSearchString(event.target.value);\n  };\n\n  const matchText = props => {\n    const word = props.name.common; // console.log(props)\n\n    const lowerCaseWord = word.toLowerCase();\n    const lowerCaseSearchString = searchString.toLowerCase();\n    return lowerCaseWord.indexOf(lowerCaseSearchString) === 0;\n  };\n\n  const filteredWords = finalCountries.filter(matchText);\n  const sortedFilteredWords = filteredWords.slice(0, 15);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: TextInput,\n      placeholder: \"Search country...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: sortedFilteredWords.map((country, index) => /*#__PURE__*/_jsxDEV(CountryInfo, {\n        country: country,\n        detailed: index < 6,\n        largest: sortedCountries[0].area\n      }, country.cca3, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 54\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"PmxOCRHk0izsRiRmDCHMYiqi/hI=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/filip/coding/React/src/App.js"],"names":["countries","CountryInfo","styled","useState","BrowserRouter","Router","Switch","Route","Link","Container","div","App","props","sortedCountries","sort","a","b","area","slice","finalCountries","filter","country","name","common","searchString","setSearchString","TextInput","event","target","value","matchText","word","lowerCaseWord","toLowerCase","lowerCaseSearchString","indexOf","filteredWords","sortedFilteredWords","map","index","cca3"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D,C,CAEA;;;AACA,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,S;;AAUN,MAAME,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,eAAe,GAAGb,SAAS,CAACc,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAApC,EAA0CC,KAA1C,CAAgD,CAAhD,EAAmD,EAAnD,CAAxB;AACA,QAAMC,cAAc,GAAGN,eAAe,CAACO,MAAhB,CAAuBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,MAAb,KAAwB,YAA1D,CAAvB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMuB,SAAS,GAAGC,KAAK,IAAI;AACzBF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAGlB,KAAK,IAAI;AACzB,UAAMmB,IAAI,GAAGnB,KAAK,CAACU,IAAN,CAAWC,MAAxB,CADyB,CAGzB;;AAEA,UAAMS,aAAa,GAAGD,IAAI,CAACE,WAAL,EAAtB;AACA,UAAMC,qBAAqB,GAAGV,YAAY,CAACS,WAAb,EAA9B;AAEA,WAAOD,aAAa,CAACG,OAAd,CAAsBD,qBAAtB,MAAiD,CAAxD;AACD,GATD;;AAWA,QAAME,aAAa,GAAGjB,cAAc,CAACC,MAAf,CAAsBU,SAAtB,CAAtB;AACA,QAAMO,mBAAmB,GAAGD,aAAa,CAAClB,KAAd,CAAoB,CAApB,EAAuB,EAAvB,CAA5B;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,QAAQ,EAAEQ,SAAjB;AAA4B,MAAA,WAAW,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBACGW,mBAAmB,CAACC,GAApB,CAAwB,CAACjB,OAAD,EAAUkB,KAAV,kBAAoB,QAAC,WAAD;AAAa,QAAA,OAAO,EAAElB,OAAtB;AAA+B,QAAA,QAAQ,EAAEkB,KAAK,GAAG,CAAjD;AAAuE,QAAA,OAAO,EAAE1B,eAAe,CAAC,CAAD,CAAf,CAAmBI;AAAnG,SAAyDI,OAAO,CAACmB,IAAjE;AAAA;AAAA;AAAA;AAAA,cAA5C;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA/BD;;GAAM7B,G;;MAAAA,G;AAiCN,eAAeA,GAAf","sourcesContent":["import countries from 'world-countries'\nimport CountryInfo from './CountryInfo'\nimport styled from 'styled-components'\nimport { useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\n// Style\nconst Container = styled.div`\n  position: absolute;\n  top: 80pt;\n  \n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`\n\nconst App = (props) => {\n  const sortedCountries = countries.sort((a, b) => b.area - a.area).slice(0, 15)\n  const finalCountries = sortedCountries.filter(country => country.name.common !== 'Antarctica')\n  const [searchString, setSearchString] = useState('')\n\n  const TextInput = event => {\n    setSearchString(event.target.value)\n  }\n\n  const matchText = props => {\n    const word = props.name.common\n\n    // console.log(props)\n\n    const lowerCaseWord = word.toLowerCase()\n    const lowerCaseSearchString = searchString.toLowerCase()\n\n    return lowerCaseWord.indexOf(lowerCaseSearchString) === 0\n  }\n\n  const filteredWords = finalCountries.filter(matchText)\n  const sortedFilteredWords = filteredWords.slice(0, 15)\n\n  return (\n    <div>\n      <input onChange={TextInput} placeholder='Search country...' />\n      <Container>\n        {sortedFilteredWords.map((country, index) => <CountryInfo country={country} detailed={index < 6} key={country.cca3} largest={sortedCountries[0].area} />)}\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}