{"version":3,"sources":["CountryInfo.js","Header.js","CountryDetails.js","CountryList.js","App.js","reportWebVitals.js","index.js"],"names":["Country","styled","div","Bar","props","width","InfoStyle","p","CountryInfo","country","detailed","largest","ratio","area","detailedPath","cca3","style","textDecoration","color","to","options","scale","reverse","max","flag","name","common","Math","round","capital","subregion","Home","ToFind","Button","button","generateRandomCountry","countriesWithBorders","countries","filter","borders","length","floor","random","Header","displayedCountries","localData","window","localStorage","getItem","toFind","JSON","parse","setItem","stringify","found","map","includes","onClick","console","log","location","href","Container","Info","HorizontalLine","hr","CountryDetails","getCountryByCca3","find","useParams","SortedBorderCountries","border","sort","a","b","Input","input","InputDiv","CountryList","useState","searchString","setSearchString","allCountries","sortedCountries","slice","sortedFilteredWords","lowerCaseWord","toLowerCase","lowerCaseSearchString","indexOf","onChange","event","target","value","placeholder","index","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d92996e.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport Tilt from 'react-tilt'\nimport { Link } from 'react-router-dom'\n\n// Style\nconst Country = styled.div`\n    background-color: #fff;\n    width: 25vw;\n    margin: 6pt;\n    padding: 1pt 8pt;\n    border-radius: 5pt;\n    box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.2);\n    border-radius: 7pt;\n    transition: .2s;\n    text-decoration: none;\n\n    &:hover {\n        box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.2);\n    }\n`\n\nconst Bar = styled.div`\n    width: ${props => props.width};\n    height: 10pt;\n    background-color: #3F66A6;\n    margin-bottom: 10pt;\n    border-radius: 3pt;\n`\n\nconst InfoStyle = styled.p`\n    padding: 0;\n`\n\n// Component\nconst CountryInfo = ({ country, detailed, largest }) => {\n  // Constants\n  const ratio = country.area / largest * 100\n  const detailedPath = '/country/' + country.cca3\n\n  return (\n    <Link style={{ textDecoration: 'none', color: 'inherit' }} to={detailedPath}>\n      <Tilt options={{ scale: 1.02, reverse: true, max: 20 }}>\n        <Country>\n\n          <InfoStyle> <b>{country.flag} {country.name.common}</b> ‚Ä¢ {Math.round(country.area / 100000) / 10} million km<sup>2</sup></InfoStyle>\n          <Bar width={ratio + '%'} />\n\n          {/* Conditional Rendering */}\n          {detailed &&\n            <div>\n              <InfoStyle>Capital: {country.capital}</InfoStyle>\n              <InfoStyle>Region: {country.subregion}</InfoStyle>\n            </div>}\n\n        </Country>\n      </Tilt>\n    </Link>\n  )\n}\n\nexport default CountryInfo\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport countries from 'world-countries'\n\n// Style\nconst Home = styled.div`\n    paddin: 200pt;\n`\n\nconst ToFind = styled.div`\n    text-align: center;\n    margin-top: 50pt;\n`\n\nconst Button = styled.button`\n  border: none;\n  height: 22pt;\n  width: 120pt;\n  border-radius: 7pt;\n  background-color: #3F66A6;\n  color: white;\n  font-weight: bold;\n  font-size: 12pt;\n  margin: 30pt 0 0 30pt;\n  transition: .2s;\n\n  &:hover {\n    cursor: pointer;\n    background-color: #345891;\n  }\n`\n\nconst generateRandomCountry = () => {\n  const countriesWithBorders = countries.filter(country => country.borders.length > 0)\n  const randomCountry = Math.floor(Math.random() * countriesWithBorders.length)\n  const countryToFind = countriesWithBorders[randomCountry]\n\n  return countryToFind\n}\n\n// Component\nconst Header = ({ displayedCountries }) => {\n  const localData = window.localStorage.getItem('toFind')\n  let toFind = localData ? JSON.parse(localData) : null\n\n  if (!toFind) {\n    toFind = generateRandomCountry()\n    window.localStorage.setItem('toFind', JSON.stringify(toFind))\n  }\n\n  const newCountry = () => {\n    window.localStorage.setItem('toFind', JSON.stringify(generateRandomCountry()))\n\n    console.log(window.location.href)\n  }\n\n  // Constants\n  const found = displayedCountries.map(country => country.cca3).includes(toFind.cca3)\n\n  return (\n    <div>\n      <Home>\n        <Link to='/'>\n          <Button onClick={newCountry}>\n            Change Country\n          </Button>\n        </Link>\n      </Home>\n\n      <ToFind>\n        {found ? (\n          <h1>üéâ You won!</h1>\n        ) : (\n          <h1>Find {toFind.name.common}{toFind.flag}</h1>\n        )}\n      </ToFind>\n\n    </div>\n  )\n}\n\nexport default Header\n","import CountryInfo from './CountryInfo'\nimport { useParams } from 'react-router'\nimport styled from 'styled-components'\nimport countries from 'world-countries'\nimport Header from './Header'\n\n// Style\nconst Container = styled.div`\n  margin-top: 70pt;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Info = styled.div`\n  text-align: center;\n`\n\nconst HorizontalLine = styled.hr`\n  width: 300pt;\n  opacity: .4;\n`\n\n// Component\nconst CountryDetails = () => {\n  // Function\n  const getCountryByCca3 = (cca3) => {\n    const CountryByCca3 = countries.find(country => country.cca3 === cca3)\n    return (CountryByCca3)\n  }\n\n  // Constants\n  const { cca3 } = useParams()\n  const clickedCountry = getCountryByCca3(cca3)\n  const borderCountries = clickedCountry.borders.map(border => getCountryByCca3(border))\n  const SortedBorderCountries = borderCountries.sort((a, b) => b.area - a.area)\n\n  return (\n    <div>\n\n      <Header displayedCountries={SortedBorderCountries} />\n      <Info>\n        {SortedBorderCountries.length === 0\n          ? <h1>ü§∑üèΩ‚Äç‚ôÇÔ∏è {getCountryByCca3(cca3).name.common} does not have any border countries</h1>\n          : (\n            <div>\n              <HorizontalLine></HorizontalLine>\n              <h4>Border countries to</h4>\n              <h1>{getCountryByCca3(cca3).flag} {getCountryByCca3(cca3).name.common}</h1>\n            </div>\n          )}\n      </Info>\n\n      <Container>\n        {SortedBorderCountries.map((country) => <CountryInfo country={country} detailed key={country.cca3} largest={SortedBorderCountries[0].area} />)}\n      </Container>\n    </div>\n  )\n}\n\nexport default CountryDetails\n","import countries from 'world-countries'\nimport styled from 'styled-components'\nimport CountryInfo from './CountryInfo'\nimport Header from './Header'\nimport { useState } from 'react'\n\n// Style\nconst Container = styled.div`\n    margin-top: 100pt;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Input = styled.input`\n    border: none;\n    outline: none;\n    height: 26pt;\n    width: 240pt;\n    border-radius: 10pt;\n    box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.2);\n\n    &:placeholder {\n      margin-left: 10pt;\n  }\n`\n\nconst InputDiv = styled.div`\n  text-align:center;\n`\n\n// Component\nconst CountryList = () => {\n\n  // Function\n  const TextInput = (event) => {\n    setSearchString(event.target.value)\n  }\n\n  const matchText = (props) => {\n    const word = props.name.common\n    const lowerCaseWord = word.toLowerCase()\n    const lowerCaseSearchString = searchString.toLowerCase()\n    return (lowerCaseWord.indexOf(lowerCaseSearchString) === 0)\n  }\n\n  // Constants\n  const [searchString, setSearchString] = useState('')\n  const allCountries = countries.filter(country => country.name.common !== 'Antarctica')\n  const sortedCountries = allCountries.sort((a, b) => b.area - a.area).slice(0, 15)\n\n  const filteredWords = allCountries.filter(matchText)\n  const sortedFilteredWords = filteredWords.slice(0, 15)\n\n  return (\n\n    <div>\n      <Header displayedCountries={sortedFilteredWords} />\n      <InputDiv>\n        <Input onChange={TextInput} placeholder='Search country...' />\n      </InputDiv>\n\n      <Container>\n        {sortedFilteredWords.map((country, index) => <CountryInfo country={country} detailed={index < 6} key={country.cca3} largest={sortedCountries[0].area} />)}\n      </Container>\n\n    </div>\n  )\n}\n\nexport default CountryList\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport CountryDetails from './CountryDetails'\nimport CountryList from './CountryList'\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n\n          <Route path='/country/:cca3'>\n            <CountryDetails />\n          </Route>\n\n          <Route path='/'>\n            <CountryList />\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}